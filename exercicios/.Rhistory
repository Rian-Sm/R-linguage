install.packages("shiny")
install.packages("shyne")
install.packages("shiny")
library(shiny)
# Define UI for app that draws a histogram ----
ui <- fluidPage(
# App title ----
titlePanel("Hello Shiny!"),
titlePanel("Hello Shiny!"),
source('F:/R-work/first-codes/hellow-shiny.R')
q()
source('F:/R-work/first-codes/hellow-shiny.R')
print(source('F:/R-work/first-codes/hellow-shiny.R')$value)
print(source('F:/R-work/first-codes/hellow-shiny.R')$value)
shinyApp(ui = ui, server = server
View(server)
shinyApp(ui = ui, server = server
View(server)
view(ui)
print(source('F:/R-work/first-codes/hellow-shiny.R')$value)
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
install.packages("dplyr")
install.packages("dplyr")
install.packages("tidyverse")
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('F:/R-work/teste-dplyr/app.r', encoding = 'UTF-8')
install.packages("dplyr")
install.packages("tidyverse")
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
View(server)
install.packages(c("cli", "htmltools", "MASS", "rsconnect", "survival", "xfun"))
install.packages(c("cli", "htmltools", "MASS", "rsconnect", "survival",
library(dplyr)
q:
library(dplyr)
starwars %>%
filter(species == "Droid")
#> # A tibble: 6 × 14
#> # A tibble: 6 × 14
#> # A tibble: 6 × 14
#>   name   height  mass hair_color skin_color eye_c…¹ birth…² sex   gender homew…³
#>   <chr>   <int> <dbl> <chr>      <chr>      <chr>     <dbl> <chr> <chr>  <chr>
#> 1 C-3PO     167    75 <NA>       gold       yellow      112 none  mascu… Tatooi…
#> 2 R2-D2      96    32 <NA>       white, bl… red          33 none  mascu… Naboo
#> 3 R5-D4      97    32 <NA>       white, red red          NA none  mascu… Tatooi…
#> 4 IG-88     200   140 none       metal      red          15 none  mascu… <NA>
#> 5 R4-P17     96    NA none       silver, r… red, b…      NA none  femin… <NA>
starwars %>%
filter(species == "Droid")
#> # A tibble: 6 × 14
#>   name   height  mass hair_color skin_color eye_c…¹ birth…² sex   gender homew…³
#>   <chr>   <int> <dbl> <chr>      <chr>      <chr>     <dbl> <chr> <chr>  <chr>
#> 1 C-3PO     167    75 <NA>       gold       yellow      112 none  mascu… Tatooi…
#> 2 R2-D2      96    32 <NA>       white, bl… red          33 none  mascu… Naboo
#> 3 R5-D4      97    32 <NA>       white, red red          NA none  mascu… Tatooi…
#> 4 IG-88     200   140 none       metal      red          15 none  mascu… <NA>
#> 5 R4-P17     96    NA none       silver, r… red, b…      NA none  femin… <NA>
#> # … with 1 more row, 4 more variables: species <chr>, films <list>,
#> #   vehicles <list>, starships <list>, and abbreviated variable names
#> #   ¹eye_color, ²birth_year, ³homeworld
starwars %>% filter(species == "Droid")
newStarWars <- starwars %>% filter(species == "Droid")
starwars %>%select(name, ends_with("color"))
starwars %>%
mutate(name, bmi = mass / ((height / 100)  ^ 2)) %>%
select(name:mass, bmi)
starwars %>%
arrange(desc(mass))
starwars %>%
group_by(species) %>%
summarise(
n = n(),
mass = mean(mass, na.rm = TRUE)
) %>%
filter(
n > 1,
mass > 50
)
setwd("F:/R-work/teste-ggplot")
install.packages("ggplot2")
library(ggplot2)
setwd("F:/R-work/exercicios")
printDate <- (name, old) {
print(name, old)
}
debugSource('F:/R-work/exercicios/1.0_read_and_write.r')
debugSource('F:/R-work/exercicios/1.0_read_and_write.r')
debugSource('F:/R-work/exercicios/1.0_read_and_write.r')
name = readline(prompt="Escreva seu nome: ")
age = readline(prompt="Escreva sua idade: ")
print(paste("My name is", name,"and I am", age, "years old"))
source('F:/R-work/exercicios/1.1_getMemory.r')
source('F:/R-work/exercicios/1.1_getMemory.r')
source('F:/R-work/exercicios/1.1_getMemory.r')
source('F:/R-work/exercicios/1.1_getMemory.r')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
print((51:91))
source('~/.active-rstudio-document')
source('F:/R-work/exercicios/1.2_method_sample.r')
help
help("verbose")
clearPushBack()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
prime_numbers <- function(n) {
if (n >= 2) {
x = seq(2, n)
prime_nums = c()
for (i in seq(2, n)) {
if (any(x == i)) {
prime_nums = c(prime_nums, i)
x = c(x[(x %% i) != 0], i)
}
}
return(prime_nums)
}
else
{
stop("Input number should be at least 2.")
}
}
prime_numbers(12)
prime_numbers(5)
prime_numbers <- function(n) {
if (n >= 2) {
x = seq(2, n)
prime_nums = c()
for (i in seq(2, n)) {
if (any(x == i)) {
prime_nums = c(prime_nums, i)
x = c(x[(x %% i) != 0], i)
y <- x
}
}
return(prime_nums)
}
else
{
stop("Input number should be at least 2.")
}
}
prime_numbers(5)
prime_numbers(5)
View(prime_numbers)
View(prime_numbers)
prime_numbers <- function(n) {
if (n >= 2) {
x = seq(2, n)
prime_nums = c()
for (i in seq(2, n)) {
if (any(x == i)) {
prime_nums = c(prime_nums, i)
x = c(x[(x %% i) != 0], i)
print(x)
}
}
return(prime_nums)
}
else
{
stop("Input number should be at least 2.")
}
}
prime_numbers(5)
prime_numbers <- function(n) {
if (n >= 2) {
x = seq(2, n)
prime_nums = c()
for (i in seq(2, n)) {
if (any(x == i)) {
prime_nums = c(prime_nums, i)
x = c(x[(x %% i) != 0], i)
print(x[(x %% i))
}
}
return(prime_nums)
}
else
{
stop("Input number should be at least 2.")
}
}
prime_numbers <- function(n) {
if (n >= 2) {
x = seq(2, n)
prime_nums = c()
for (i in seq(2, n)) {
if (any(x == i)) {
prime_nums = c(prime_nums, i)
x = c(x[(x %% i) != 0], i)
}
}
return(prime_nums)
}
else
{
stop("Input number should be at least 2.")
}
print(x[(x %% i))
prime_numbers <- function(n) {
if (n >= 2) {
x = seq(2, n)
prime_nums = c()
for (i in seq(2, n)) {
if (any(x == i)) {
prime_nums = c(prime_nums, i)
x = c(x[(x %% i) != 0], i)
print(x[(x %% i))
}
}
return(prime_nums)
}
else
{
stop("Input number should be at least 2.")
}
}
prime_numbers <- function(n) {
if (n >= 2) {
x = seq(2, n)
prime_nums = c()
for (i in seq(2, n)) {
if (any(x == i)) {
prime_nums = c(prime_nums, i)
x = c(x[(x %% i) != 0], i)
print(x[(x %% i)
}
}
return(prime_nums)
}
else
{
stop("Input number should be at least 2.")
}
}
prime_numbers <- function(n) {
if (n >= 2) {
x = seq(2, n)
prime_nums = c()
for (i in seq(2, n)) {
if (any(x == i)) {
prime_nums = c(prime_nums, i)
x = c(x[(x %% i) != 0], i)
print(c(x[(x %% i) != 0], i))
}
}
return(prime_nums)
}
else
{
stop("Input number should be at least 2.")
}
}
prime_numbers(5)
prime_numbers <- function(n) {
if (n >= 2) {
x = seq(2, n)
prime_nums = c()
for (i in seq(2, n)) {
if (any(x == i)) {
prime_nums = c(prime_nums, i)
x = c(x[(x %% i) != 0], i)
print(c(x[(x %% i)], i))
}
}
return(prime_nums)
}
else
{
stop("Input number should be at least 2.")
}
}
prime_numbers(5)
print("a",c(x[(x %% i)], i))
print("a",c(x[(x %% i)], i))
prime_numbers <- function(n) {
if (n >= 2) {
x = seq(2, n)
prime_nums = c()
for (i in seq(2, n)) {
if (any(x == i)) {
prime_nums = c(prime_nums, i)
x = c(x[(x %% i) != 0], i)
print("a",c(x[(x %% i)], i))
}
}
return(prime_nums)
}
else
{
stop("Input number should be at least 2.")
}
}
prime_numbers(5)
#Write a R program to get all prime numbers up to a given number (based on the sieve of Eratosthenes).
prime_numbers <- function(n) {
if (n >= 2) {
x = seq(2, n)
prime_nums = c()
for (i in seq(2, n)) {
if (any(x == i)) {
prime_nums = c(prime_nums, i)
x = c(x[(x %% i) != 0], i)
print("a"+c(x[(x %% i)], i))
}
}
return(prime_nums)
}
else
{
stop("Input number should be at least 2.")
}
}
prime_numbers(5)
print("a"+c(x[(x %% i)!= 0], i))
#Write a R program to get all prime numbers up to a given number (based on the sieve of Eratosthenes).
prime_numbers <- function(n) {
if (n >= 2) {
x = seq(2, n)
prime_nums = c()
for (i in seq(2, n)) {
if (any(x == i)) {
prime_nums = c(prime_nums, i)
x = c(x[(x %% i) != 0], i)
print("a"+c(x[(x %% i)!= 0], i))
}
}
return(prime_nums)
}
else
{
stop("Input number should be at least 2.")
}
}
prime_numbers(5)
}
#Write a R program to get all prime numbers up to a given number (based on the sieve of Eratosthenes).
prime_numbers <- function(n) {
if (n >= 2) {
x = seq(2, n)
prime_nums = c()
for (i in seq(2, n)) {
if (any(x == i)) {
prime_nums = c(prime_nums, i)
x = c(x[(x %% i) != 0], i)
}
}
return(prime_nums)
}
else
{
stop("Input number should be at least 2.")
}
}
prime_numbers(5)
